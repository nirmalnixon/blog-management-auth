{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\blog-management\\\\src\\\\components\\\\Blog\\\\BlogDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport api from \"../../authInterceptor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract the blog ID from the URL\n  const navigate = useNavigate();\n  const [blog, setBlog] = useState([]);\n\n  // Load saved tasks when the component mounts.\n  useEffect(() => {\n    getBlogDetail();\n  }, [blog]);\n\n  // Updates localStorage every time taskList changes.\n\n  const getBlogDetail = () => {\n    api.get('blog/' + id).then(response => {\n      if (!response.data) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No blogs available. Please add some blogs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 18\n        }, this);\n      }\n      setBlog(response.data);\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: blog.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"blog-author\",\n      children: [\"Written by: \", blog.createdBy || \"Unknown\", \" | Posted on:\", \" \", new Date(blog.createdAt).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-content\",\n      children: blog.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/blogs\"),\n      className: \"btn-back\",\n      children: \"Back to Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 1\n  }, this);\n};\n_s(BlogDetail, \"t3GO68RTWBqprKR7S1HamGltenQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BlogDetail;\nexport default BlogDetail;\nvar _c;\n$RefreshReg$(_c, \"BlogDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","api","jsxDEV","_jsxDEV","BlogDetail","_s","id","navigate","blog","setBlog","getBlogDetail","get","then","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","catch","error","console","className","title","createdBy","Date","createdAt","toLocaleDateString","content","onClick","_c","$RefreshReg$"],"sources":["E:/React/blog-management/src/components/Blog/BlogDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport api from \"../../authInterceptor\";\r\n\r\nconst BlogDetail = () => {\r\n  const { id } = useParams(); // Extract the blog ID from the URL\r\n  const navigate = useNavigate();\r\n\r\n  const [blog, setBlog] = useState([]);\r\n\r\n  // Load saved tasks when the component mounts.\r\n  useEffect(() => {\r\n    getBlogDetail()\r\n  }, [blog]);\r\n\r\n  // Updates localStorage every time taskList changes.\r\n\r\n  const getBlogDetail = () => {\r\n    api.get('blog/' + id)\r\n      .then(response => {\r\n        if (!response.data) {\r\n          return <p>No blogs available. Please add some blogs.</p>;\r\n        }\r\n        setBlog(response.data)\r\n      })\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  return (\r\n<div className=\"blog-detail-container\">\r\n      <h2>{blog.title}</h2>\r\n      <p className=\"blog-author\">\r\n        Written by: {blog.createdBy || \"Unknown\"} | Posted on:{\" \"}\r\n        {new Date(blog.createdAt).toLocaleDateString()}\r\n      </p>\r\n      <div className=\"blog-content\">{blog.content}</div>\r\n\r\n      <button onClick={() => navigate(\"/blogs\")} className=\"btn-back\">\r\n        Back to Blogs\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,GAAG,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACda,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;;EAEV;;EAEA,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1BT,GAAG,CAACU,GAAG,CAAC,OAAO,GAAGL,EAAE,CAAC,CAClBM,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,IAAI,EAAE;QAClB,oBAAOX,OAAA;UAAAY,QAAA,EAAG;QAA0C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAC1D;MACAV,OAAO,CAACI,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,oBACFlB,OAAA;IAAKoB,SAAS,EAAC,uBAAuB;IAAAR,QAAA,gBAChCZ,OAAA;MAAAY,QAAA,EAAKP,IAAI,CAACgB;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBhB,OAAA;MAAGoB,SAAS,EAAC,aAAa;MAAAR,QAAA,GAAC,cACb,EAACP,IAAI,CAACiB,SAAS,IAAI,SAAS,EAAC,eAAa,EAAC,GAAG,EACzD,IAAIC,IAAI,CAAClB,IAAI,CAACmB,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACJhB,OAAA;MAAKoB,SAAS,EAAC,cAAc;MAAAR,QAAA,EAAEP,IAAI,CAACqB;IAAO;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAElDhB,OAAA;MAAQ2B,OAAO,EAAEA,CAAA,KAAMvB,QAAQ,CAAC,QAAQ,CAAE;MAACgB,SAAS,EAAC,UAAU;MAAAR,QAAA,EAAC;IAEhE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCID,UAAU;EAAA,QACCL,SAAS,EACPC,WAAW;AAAA;AAAA+B,EAAA,GAFxB3B,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}